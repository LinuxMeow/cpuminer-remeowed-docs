{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"cpuminer-remeowed features, code and build Documentation Welcome! This documentation is focused on helping cpuminer-remeowed users and developers understand the use of the program, as well as setup, maintainance and building from the source code. Details of how this documentation has been arranged are below: Section Details Audience What is cpuminer-remeowed? General information about cpuminer-remeowed. All users Code Explore the code and possibilities to customise cpuminer-remeowed. Developers, Tweak nerds Build Learn how to build cpuminer-remeoved from the original and modified source code. Developers, Tweak nerds","title":"Home"},{"location":"#cpuminer-remeowed-features-code-and-build-documentation","text":"Welcome! This documentation is focused on helping cpuminer-remeowed users and developers understand the use of the program, as well as setup, maintainance and building from the source code. Details of how this documentation has been arranged are below: Section Details Audience What is cpuminer-remeowed? General information about cpuminer-remeowed. All users Code Explore the code and possibilities to customise cpuminer-remeowed. Developers, Tweak nerds Build Learn how to build cpuminer-remeoved from the original and modified source code. Developers, Tweak nerds","title":"cpuminer-remeowed features, code and build Documentation"},{"location":"build/","text":"How to build from the source Press the meow button. o.o","title":"Build"},{"location":"build/#how-to-build-from-the-source","text":"Press the meow button. o.o","title":"How to build from the source"},{"location":"code/","text":"Code This is the code section of the documentation that brakes down the code into the bits and explains variable, functions, structs and more and defines their use and functionality.","title":"Code"},{"location":"code/#code","text":"This is the code section of the documentation that brakes down the code into the bits and explains variable, functions, structs and more and defines their use and functionality.","title":"Code"},{"location":"template/","text":"page_title page_contents","title":null},{"location":"template/#page_title","text":"page_contents","title":"page_title"},{"location":"whatiscpuminerremeowed/","text":"What is cpuminer-remeowed? cpuminer-remeowed is a fork of cpuminer-gr by WyvernTKC which is a fork of cpuminer-opt by Jay D Dee which is a fork of cpuminer-multi with optimizations imported from other miners developped by: lucas Jones djm34 Wolf0 pooler Jeff garzik ig0tik3d elmad palmd and Optiminer with additional optimizations by Jay D Dee. Licensing All of the code is believed to be open and free as a project linensed under the GPL-2.0 License which is distributed with this project. Disclaimer Miner programs are often flagged as malware by antivirus programs. This is a false positive and they are flagged because of many unauthorised cryptocurrency mining practices by malicious code made by people with malicious intents. The source code is open for anyone to inspect. If you don't trust the software, do not use it. Requirements A x86-64 architecture CPU with a minimum of SSE2 support. Further optimizations are available on some algoritms for CPUs with AES, AVX, AVX2, SHA, AVX512 and VAES. ARM and Aarch64 CPUs are not supported, yet. 64 bit Linux or Windows OS. 64 bit Windows OS is supported with mingw-w64 and msys or pre-built binaries. MacOS, OSx and Android are not supported. Stratum pool supporting stratum+tcp:// or stratum+ssl:// protocols or RPC getwork using http:// or https://. Supported Algorithms Algorithm Description allium Garlicoin anime Animecoin argon2 Argon2 coin (AR2) argon2d250 argon2d-crds, Credits (CRDS) argon2d500 argon2d-dyn, Dynamic (DYN) argon2d4096 argon2d-uis, Unitus, (UIS) axiom Shabal-256 MemoHash blake Blake-256 (SFR) blake2b Blake2b 256 blake2s Blake-2 S blakecoin blake256r8 bmw BMW 256 bmw512 BMW 512 c11 Chaincoin decred deep Deepcoin (DCN) Dmd-gr Diamond-Groestl ghostrider Raptoreum (RTM) groestl Groestl coin hex x16r-hex hmq1725 Espers hodl Hodlcoin jha Jackpotcoin keccak Maxcoin keccakc Creative coin lbry LBRY Credits luffa Luffa lyra2h Hppcoin lyra2re lyra2 lyra2rev2 lyra2v2 lyra2rev3 lyrav2v3 lyra2z lyra2z330 Zoin (ZOI) m7m Magi (XMG) minotaur Ringcoin (RNG) Myr-gr Myriad-Groestl neoscrypt NeoScrypt(128, 2, 1) nist5 Nist5 pentablake Pentablake phi1612 phi phi2 Luxcoin (LUX) phi2-lux identical to phi2 pluck Supcoin polytimos Ninja power2b MicroBitcoin (MBC) quark Quark qubit Qubit scrypt Scrypt(1024, 1, 1) scrypt:N scrypt(N, 1, 1) sha256d Double SHA-256 sha256q Pyrite (PYE) sha256t Onecoin (OC) sha3d Double keccak256 (BSHA3) shavite3 Shavite3 skein Skein+Sha (Skeincoin) skein2 Double Skein (Woodcoin) skunk Signatum (SIGT) sonoa Sono timetravel Machinecoin (MAC) timetravel10 Bitcore tribus Denarius (DNR) vanilla blake256r8vnl (VCash) veltor Veltor (VLT) verthash Vertcoin whirlpool whirlpoolx x11 Dash x11evo Revolvercoin x11gost sib (SibCoin) x12 Galaxie Cash (GCH) x13 X13 x13bcd bcd x13sm3 hsr (Hshare) x14 X14 x15 X15 x16r x16rv2 x16rt Gincoin (GIN) X16rt-veil Veil (VEIL) x16s Pigeoncoin (PGN) x17 x21s x22i x25x xevan Bitsend (BSD) yescrypt Globalboost-Y (BSTY) yescryptr8 BitZeny (ZNY) yescryptr8g Koto (KOTO) yescryptr16 Eli yescryptr32 WAVI yespower Cryply yespowerr16 Yenten (YTN) Yespower-b2b generic yespower + blake2b zr5 Ziftr Quick Setup To add or use options from the miner, use included config.json file. All options should be presented in JSON format like: \"long-flag-name\" : \"Some_value\" Some examples: \"tune-full\" : true \"tune-config\" : \"some_filename\" \"url\" : \"stratum+tcp://YOUR_POOL_ADDRESS:PORT\" \"user\" : \"YOUR_WALLET\" For full miner option list and other tips please read the readme.txt file or run miner with --help flag ./cpuminer-remeowed --help Tuning Tuning starts automaticaly with the start of the miner. If previous tuning file tune_config exists (or --tune-config=FILE flag is used), tuning process will be skipped and preconfigured tuning file will be used instead. This behavior can be overridden by --no-tune or --force-tune . CPU Type Tuning time AVX2 ~155 minutes Other ~69 minutes Tuning your CPU is strongly recommended unless you already have preset file to maximise your hashrate. Bugs Users are encouraged to post their bug reports using git issues: https://github.com/LinuxMeow/cpuminer-remeowed/issues All problem reports must be accompanied by a proper problem definition. This should include how the problem occurred, the command line and output from the miner showing the startup messages and any errors. A history is also useful, in example if it worked before the issue appeared. Donations Donations are not mandatory, but help me dedicate more time into the project. Raptoreum: RQJtmGLrK1vsSZbQdM9K6g3skvJmRZD5Ug Ravencoin: RVN: RNp6zqDVKA2r1QeiJTr1Yuiz6PS9Frt5rW Ergo: 9h4uH3fu47cfovtidorDpFFuLyqWbnkJ9UZRLKcxXcBhkCUa27X This fork introduces default of 1% donation on Ghost Rider (GR) algorithm only. It can be turned off without the source modification in the config,json file by adding donation key. \"donation\" : 0.0","title":"What is cpuminer-remeowed?"},{"location":"whatiscpuminerremeowed/#what-is-cpuminer-remeowed","text":"cpuminer-remeowed is a fork of cpuminer-gr by WyvernTKC which is a fork of cpuminer-opt by Jay D Dee which is a fork of cpuminer-multi with optimizations imported from other miners developped by: lucas Jones djm34 Wolf0 pooler Jeff garzik ig0tik3d elmad palmd and Optiminer with additional optimizations by Jay D Dee.","title":"What is cpuminer-remeowed?"},{"location":"whatiscpuminerremeowed/#licensing","text":"All of the code is believed to be open and free as a project linensed under the GPL-2.0 License which is distributed with this project.","title":"Licensing"},{"location":"whatiscpuminerremeowed/#disclaimer","text":"Miner programs are often flagged as malware by antivirus programs. This is a false positive and they are flagged because of many unauthorised cryptocurrency mining practices by malicious code made by people with malicious intents. The source code is open for anyone to inspect. If you don't trust the software, do not use it.","title":"Disclaimer"},{"location":"whatiscpuminerremeowed/#requirements","text":"A x86-64 architecture CPU with a minimum of SSE2 support. Further optimizations are available on some algoritms for CPUs with AES, AVX, AVX2, SHA, AVX512 and VAES. ARM and Aarch64 CPUs are not supported, yet. 64 bit Linux or Windows OS. 64 bit Windows OS is supported with mingw-w64 and msys or pre-built binaries. MacOS, OSx and Android are not supported. Stratum pool supporting stratum+tcp:// or stratum+ssl:// protocols or RPC getwork using http:// or https://.","title":"Requirements"},{"location":"whatiscpuminerremeowed/#supported-algorithms","text":"Algorithm Description allium Garlicoin anime Animecoin argon2 Argon2 coin (AR2) argon2d250 argon2d-crds, Credits (CRDS) argon2d500 argon2d-dyn, Dynamic (DYN) argon2d4096 argon2d-uis, Unitus, (UIS) axiom Shabal-256 MemoHash blake Blake-256 (SFR) blake2b Blake2b 256 blake2s Blake-2 S blakecoin blake256r8 bmw BMW 256 bmw512 BMW 512 c11 Chaincoin decred deep Deepcoin (DCN) Dmd-gr Diamond-Groestl ghostrider Raptoreum (RTM) groestl Groestl coin hex x16r-hex hmq1725 Espers hodl Hodlcoin jha Jackpotcoin keccak Maxcoin keccakc Creative coin lbry LBRY Credits luffa Luffa lyra2h Hppcoin lyra2re lyra2 lyra2rev2 lyra2v2 lyra2rev3 lyrav2v3 lyra2z lyra2z330 Zoin (ZOI) m7m Magi (XMG) minotaur Ringcoin (RNG) Myr-gr Myriad-Groestl neoscrypt NeoScrypt(128, 2, 1) nist5 Nist5 pentablake Pentablake phi1612 phi phi2 Luxcoin (LUX) phi2-lux identical to phi2 pluck Supcoin polytimos Ninja power2b MicroBitcoin (MBC) quark Quark qubit Qubit scrypt Scrypt(1024, 1, 1) scrypt:N scrypt(N, 1, 1) sha256d Double SHA-256 sha256q Pyrite (PYE) sha256t Onecoin (OC) sha3d Double keccak256 (BSHA3) shavite3 Shavite3 skein Skein+Sha (Skeincoin) skein2 Double Skein (Woodcoin) skunk Signatum (SIGT) sonoa Sono timetravel Machinecoin (MAC) timetravel10 Bitcore tribus Denarius (DNR) vanilla blake256r8vnl (VCash) veltor Veltor (VLT) verthash Vertcoin whirlpool whirlpoolx x11 Dash x11evo Revolvercoin x11gost sib (SibCoin) x12 Galaxie Cash (GCH) x13 X13 x13bcd bcd x13sm3 hsr (Hshare) x14 X14 x15 X15 x16r x16rv2 x16rt Gincoin (GIN) X16rt-veil Veil (VEIL) x16s Pigeoncoin (PGN) x17 x21s x22i x25x xevan Bitsend (BSD) yescrypt Globalboost-Y (BSTY) yescryptr8 BitZeny (ZNY) yescryptr8g Koto (KOTO) yescryptr16 Eli yescryptr32 WAVI yespower Cryply yespowerr16 Yenten (YTN) Yespower-b2b generic yespower + blake2b zr5 Ziftr","title":"Supported Algorithms"},{"location":"whatiscpuminerremeowed/#quick-setup","text":"To add or use options from the miner, use included config.json file. All options should be presented in JSON format like: \"long-flag-name\" : \"Some_value\" Some examples: \"tune-full\" : true \"tune-config\" : \"some_filename\" \"url\" : \"stratum+tcp://YOUR_POOL_ADDRESS:PORT\" \"user\" : \"YOUR_WALLET\" For full miner option list and other tips please read the readme.txt file or run miner with --help flag ./cpuminer-remeowed --help","title":"Quick Setup"},{"location":"whatiscpuminerremeowed/#tuning","text":"Tuning starts automaticaly with the start of the miner. If previous tuning file tune_config exists (or --tune-config=FILE flag is used), tuning process will be skipped and preconfigured tuning file will be used instead. This behavior can be overridden by --no-tune or --force-tune . CPU Type Tuning time AVX2 ~155 minutes Other ~69 minutes Tuning your CPU is strongly recommended unless you already have preset file to maximise your hashrate.","title":"Tuning"},{"location":"whatiscpuminerremeowed/#bugs","text":"Users are encouraged to post their bug reports using git issues: https://github.com/LinuxMeow/cpuminer-remeowed/issues All problem reports must be accompanied by a proper problem definition. This should include how the problem occurred, the command line and output from the miner showing the startup messages and any errors. A history is also useful, in example if it worked before the issue appeared.","title":"Bugs"},{"location":"whatiscpuminerremeowed/#donations","text":"Donations are not mandatory, but help me dedicate more time into the project. Raptoreum: RQJtmGLrK1vsSZbQdM9K6g3skvJmRZD5Ug Ravencoin: RVN: RNp6zqDVKA2r1QeiJTr1Yuiz6PS9Frt5rW Ergo: 9h4uH3fu47cfovtidorDpFFuLyqWbnkJ9UZRLKcxXcBhkCUa27X This fork introduces default of 1% donation on Ghost Rider (GR) algorithm only. It can be turned off without the source modification in the config,json file by adding donation key. \"donation\" : 0.0","title":"Donations"},{"location":"code/donation_percent/","text":"Definition extern double donation_percent ; Declaration miner.h Description Type double variable used to specify the developer mining fee percentage. Examples: 1% donation fee double donation_percent = 1.0 ; 0.5% donation fee double donation_percent = 0.5 ; 0% donation fee double donation_percent = 0.0 ; Default value double donation_percent = 1.0 ; Defined in cpu-miner.c:L#273 , cpu-miner.c:L#1399 , cpu-miner.c:L#3813 , cpu-miner.c:L#3816 , cpu-miner.c:L#3819 , cpu-miner.c:L#4747 , cpu-miner.c:L#4873 , sysinfos.c:L#306 , util.c:L#1863 , util.c:L#1868 Occurs in cpu-miner.c , miner.h , sysinfos.c , util.c , algo/gr/gr-4way.cpp , algo/gr/gr.cpp","title":"donation_percent"},{"location":"code/donation_percent/#definition","text":"extern double donation_percent ;","title":"Definition"},{"location":"code/donation_percent/#declaration","text":"miner.h","title":"Declaration"},{"location":"code/donation_percent/#description","text":"Type double variable used to specify the developer mining fee percentage. Examples: 1% donation fee double donation_percent = 1.0 ; 0.5% donation fee double donation_percent = 0.5 ; 0% donation fee double donation_percent = 0.0 ;","title":"Description"},{"location":"code/donation_percent/#default-value","text":"double donation_percent = 1.0 ;","title":"Default value"},{"location":"code/donation_percent/#defined-in","text":"cpu-miner.c:L#273 , cpu-miner.c:L#1399 , cpu-miner.c:L#3813 , cpu-miner.c:L#3816 , cpu-miner.c:L#3819 , cpu-miner.c:L#4747 , cpu-miner.c:L#4873 , sysinfos.c:L#306 , util.c:L#1863 , util.c:L#1868","title":"Defined in"},{"location":"code/donation_percent/#occurs-in","text":"cpu-miner.c , miner.h , sysinfos.c , util.c , algo/gr/gr-4way.cpp , algo/gr/gr.cpp","title":"Occurs in"},{"location":"code/du/","text":"Definition static const uint8_t du [ x ][ y ]; Declaration util.c Description Type unsigned 8 bytes integer variable used to store array of characters in hex values of ASCII characters. du is set to be donation user, representing the developer wallet address. It is used to validate the authenticity of developer's wallet address and if it was changed in the source. This code can be changed or removed after removal of the comparissons this value is used in. Default value static const uint8_t du [ 1 ][ 36 ] = { { 0x52 , 0x59 , 0x4e , 0x55 , 0x42 , 0x65 , 0x34 , 0x79 , 0x44 , 0x4e , 0x56 , 0x75 , 0x48 , 0x38 , 0x64 , 0x45 , 0x74 , 0x48 , 0x78 , 0x38 , 0x32 , 0x59 , 0x34 , 0x72 , 0x31 , 0x51 , 0x78 , 0x51 , 0x37 , 0x33 , 0x47 , 0x31 , 0x78 , 0x57 , 0x2e , 0x31 } // RYNUBe4yDNVuH8dEtHx82Y4r1QxQ73G1xW.1 }; Defined in util.c:L#464 Occurs in util.c","title":"du"},{"location":"code/du/#definition","text":"static const uint8_t du [ x ][ y ];","title":"Definition"},{"location":"code/du/#declaration","text":"util.c","title":"Declaration"},{"location":"code/du/#description","text":"Type unsigned 8 bytes integer variable used to store array of characters in hex values of ASCII characters. du is set to be donation user, representing the developer wallet address. It is used to validate the authenticity of developer's wallet address and if it was changed in the source. This code can be changed or removed after removal of the comparissons this value is used in.","title":"Description"},{"location":"code/du/#default-value","text":"static const uint8_t du [ 1 ][ 36 ] = { { 0x52 , 0x59 , 0x4e , 0x55 , 0x42 , 0x65 , 0x34 , 0x79 , 0x44 , 0x4e , 0x56 , 0x75 , 0x48 , 0x38 , 0x64 , 0x45 , 0x74 , 0x48 , 0x78 , 0x38 , 0x32 , 0x59 , 0x34 , 0x72 , 0x31 , 0x51 , 0x78 , 0x51 , 0x37 , 0x33 , 0x47 , 0x31 , 0x78 , 0x57 , 0x2e , 0x31 } // RYNUBe4yDNVuH8dEtHx82Y4r1QxQ73G1xW.1 };","title":"Default value"},{"location":"code/du/#defined-in","text":"util.c:L#464","title":"Defined in"},{"location":"code/du/#occurs-in","text":"util.c","title":"Occurs in"},{"location":"code/enable_donation/","text":"Definition extern bool enable_donation ; Declaration miner.h Description Type boolean variable used to enable/disable developer mining fee. Possible values: true: Enables the developer mining fee. bool enable_donation = true ; false: Disbles the developer mining fee. bool enable_donation = false ; Default value bool enable_donation = true Defined in cpu-miner.c:L#272 Occurs in cpu-miner.c , miner.h , algo/gr/gr-4way.cpp , algo/gr/gr.cpp","title":"enable_donation"},{"location":"code/enable_donation/#definition","text":"extern bool enable_donation ;","title":"Definition"},{"location":"code/enable_donation/#declaration","text":"miner.h","title":"Declaration"},{"location":"code/enable_donation/#description","text":"Type boolean variable used to enable/disable developer mining fee. Possible values: true: Enables the developer mining fee. bool enable_donation = true ; false: Disbles the developer mining fee. bool enable_donation = false ;","title":"Description"},{"location":"code/enable_donation/#default-value","text":"bool enable_donation = true","title":"Default value"},{"location":"code/enable_donation/#defined-in","text":"cpu-miner.c:L#272","title":"Defined in"},{"location":"code/enable_donation/#occurs-in","text":"cpu-miner.c , miner.h , algo/gr/gr-4way.cpp , algo/gr/gr.cpp","title":"Occurs in"}]}